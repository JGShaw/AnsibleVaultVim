*AnsibleVaultVim* Makes working with Ansible vaults in Vim much easier!
         _              _ _     _    __     __          _ _ __     ___               ~
        / \   _ __  ___(_) |__ | | __\ \   / /_ _ _   _| | |\ \   / (_)_ __ ___      ~
       / _ \ | '_ \/ __| | '_ \| |/ _ \ \ / / _` | | | | | __\ \ / /| | '_ ` _ \     ~
      / ___ \| | | \__ \ | |_) | |  __/\ V / (_| | |_| | | |_ \ V / | | | | | | |    ~
     /_/   \_\_| |_|___/_|_.__/|_|\___| \_/ \__,_|\__,_|_|\__| \_/  |_|_| |_| |_|    ~


    Makes working on ansible vault files much simplier in Vim by automatically
                (or manually) handling the encryption of vault files.

======================================================================================
Contents                                                     *AnsibleVaultVimContents*

    1.   Installation .................................. |AnsibleVaultVimInstallation|
    2.   Usage ................................................ |AnsibleVaultVimUsage|
    2.1. Automatic ....................................|AnsibleVaultVimUsageAutomatic|
    2.2. Manual ......................................... |AnsibleVaultVimUsageManual|
    3.   Contributing .................................. |AnsibleVaultVimContributing|

======================================================================================
Section 1: Installation                                  *AnsibleVaultVimInstallation*

Install the plugin using your favourite plugin manager, for example:

  Plug 'JGShaw/AnsibleVaultVim'

Add the following to your .vimrc, making sure to configure the vault password file
name:

  let g:AnsibleVaultVimPasswordFile = "vault password file name"
  let g:AnsibleVaultVimAutomatic = 1
  nmap <silent> <leader>avv :AnsibleVaultView<CR>
  nmap <silent> <leader>ave :AnsibleVaultEdit<CR>

======================================================================================
Section 2: Usage                                                *AnsibleVaultVimUsage*

Section 2.1: Automatic                                 *AnsibleVaultVimUsageAutomatic*

In automatic mode you should not need to use Vim differently when working on encrypted
files, this feature is experimental and has not been tested on different operating
systems so may have limited usage.

Section 2.2: Manual                                       *AnsibleVaultVimUsageManual*

This plugin adds two functions for interacting with ansible vault files. Open a vault
file and run on the of following functions:

- AnsibleVaultView() - prints the contents of the fault and waits for the user to
                       press enter to close it and return to the raw vault file. This
                       is bound to <leader>avv in the default installation
                       instructions.

- AnsibleVaultEdit() - opens the vault file for editing just as `ansible-vault edit`
                       would. Assuming that your editor is vim, it will open a new
                       instance of vim infront of your existing one. Edit the vault
                       file, then save and close the new vim to get back to the
                       original session. This is bound to <leader>ave in the default
                       installation instructions.

======================================================================================
Section 3: Contributing                                  *AnsibleVaultVimContributing*

Issue a pull request to https://github.com/JGShaw/ansible-vault-vim
